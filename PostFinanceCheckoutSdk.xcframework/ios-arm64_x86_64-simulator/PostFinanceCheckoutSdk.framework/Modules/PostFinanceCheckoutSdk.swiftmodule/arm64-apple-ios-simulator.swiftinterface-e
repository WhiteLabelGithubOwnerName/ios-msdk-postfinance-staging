// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
// swift-module-flags: -target arm64-apple-ios12.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PostFinanceCheckoutSdk
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
import Combine
import Foundation
import PassKit
@_exported import PostFinanceCheckoutSdk
import Swift
import SwiftUI
import TwintSDK
import UIKit
import _Concurrency
import _StringProcessing
public enum ConsoleErrorHandler : Swift.String, Foundation.LocalizedError {
  case MissingTokenValue
  public var errorDescription: Swift.String? {
    get
  }
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public protocol PostFinanceCheckoutResultObserver : AnyObject {
  func paymentResult(paymentResultMessage: PostFinanceCheckoutSdk.PaymentResult)
}
public enum ThemeEnum : Swift.String {
  case LIGHT
  case DARK
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public enum PaymentResultEnum : Swift.String {
  case CANCELED
  case FAILED
  case COMPLETED
  case TIMEOUT
  case PENDING
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public struct PaymentResult {
  public var code: PostFinanceCheckoutSdk.PaymentResultEnum
  public var message: Swift.String?
}
public class PostFinanceCheckoutSdk {
  public static func onHandleOpenURL(url: Foundation.URL) -> Swift.Bool
  public init(eventObserver: PostFinanceCheckoutSdk.PostFinanceCheckoutResultObserver)
  public func launchPayment(token: Swift.String)
  public func configureApplePay(merchantId: Swift.String)
  @available(iOS 13.0, *)
  public func launchPayment(token: Swift.String, isSwiftUI: Swift.Bool)
  public func close()
  public func setLightTheme(light: Foundation.NSMutableDictionary)
  public func setAnimation(type: PostFinanceCheckoutSdk.AnimationEnum)
  public func setDarkTheme(dark: Foundation.NSMutableDictionary)
  public func setCustomTheme(custom: Foundation.NSMutableDictionary?, baseTheme: PostFinanceCheckoutSdk.ThemeEnum)
  @objc deinit
}
public enum AnimationEnum : Swift.String {
  case BUBBLE
  case SLIDE
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
extension PostFinanceCheckoutSdk.ConsoleErrorHandler : Swift.Equatable {}
extension PostFinanceCheckoutSdk.ConsoleErrorHandler : Swift.Hashable {}
extension PostFinanceCheckoutSdk.ConsoleErrorHandler : Swift.RawRepresentable {}
extension PostFinanceCheckoutSdk.ThemeEnum : Swift.Equatable {}
extension PostFinanceCheckoutSdk.ThemeEnum : Swift.Hashable {}
extension PostFinanceCheckoutSdk.ThemeEnum : Swift.RawRepresentable {}
extension PostFinanceCheckoutSdk.PaymentResultEnum : Swift.Equatable {}
extension PostFinanceCheckoutSdk.PaymentResultEnum : Swift.Hashable {}
extension PostFinanceCheckoutSdk.PaymentResultEnum : Swift.RawRepresentable {}
extension PostFinanceCheckoutSdk.AnimationEnum : Swift.Equatable {}
extension PostFinanceCheckoutSdk.AnimationEnum : Swift.Hashable {}
extension PostFinanceCheckoutSdk.AnimationEnum : Swift.RawRepresentable {}
